server:
  port: 8055
spring:
  datasource:
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      test1:
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/test1?useSSL=false&createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true
        username: root
        password: root
      test2:
        driver-class-name: com.mysql.jdbc.Driver
        url: jdbc:mysql://localhost:3306/test2?useSSL=false&createDatabaseIfNotExist=true&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true
        username: root
        password: root
      # 下面为连接池的补充设置，应用到上面所有数据源中
      initialSize: 10
      minIdle: 10
      maxActive: 50
      # 配置获取连接等待超时的时间
      maxWait: 6000
      # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      timeBetweenEvictionRunsMillis: 60000
      # 配置一个连接在池中最小生存的时间，单位是毫秒
      minEvictableIdleTimeMillis: 30000
      validationQuery: SELECT 1 FROM DUAL
      testWhileIdle: true
      testOnBorrow: false
      testOnReturn: false
      # 打开PSCache，并且指定每个连接上PSCache的大小
      poolPreparedStatements: true
      maxPoolPreparedStatementPerConnectionSize: 20
      # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
      filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
      logSlowSql: true
      # 合并多个DruidDataSource的监控数据
      #useGlobalDataSourceStat: true
mybatis:
  mapper-locations: classpath:mapper/*.xml #Mapper的xml文件